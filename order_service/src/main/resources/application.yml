spring:
  application:
    name: service-order
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/shop?useUnicode=true&characterEncoding=utf8
    username: root
    password: 614213
  jpa:
    database: MySQL
    show-sql: true
    open-in-view: true
    hibernate:
      ddl-auto: update
  cloud:
    loadbalancer:
      retry:
        # 开启Spring Cloud的重试功能
        enabled: true
  zipkin:
    base-url: http://127.0.0.1:9411/
    sender:
      # 数据的传输方式，以http请求向server发送数据
      type: web
  sleuth:
    sampler:
      # 采样比
      probability: 1
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    # 重试
    listener:
      direct:
        retry:
          enabled: true
      simple:
        retry:
          enabled: true

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
  client:
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 5
    service-url:
      defaultZone: http://root:root@127.0.0.1:9001/eureka/,http://root:root@127.0.0.1:9002/eureka/

feign:
  # 开启熔断
  hystrix:
    enabled: true

# 修改ribbon的负载均衡策略   服务名 -  ribbon - NFLoadBalancerRuleClassName : 策略
service-product:
  ribbon:
    # RoundRobinRule 轮询
    # RandomRule 随机
    # RetryRule 重试
    # WeightedResponseTimeRule 权重
    # BestAvailableRule,最佳
    # BestAvailabilityFilteringRule 可用
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
    # Ribbon的连接超时时间
    ConnectTimeout: 2000
    # Ribbon的数据读取超时时间
    ReadTimeout: 5000
    # 是否对所有操作都进行重试
    OkToRetryOnAllOperations: true
    # 切换实例的重试次数
    MaxAutoRetriesNextServer: 3
    # 对当前实例的重试次数
    MaxAutoRetries: 1
    # 最大连接数
    MaxTotalConnections: 500
    # 每个Host最大连接数
    MaxConnectionsPerHost: 500

# 日志
logging:
  level:
    root: info
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    org.springframework.cloud.sleuth: DEBUG
    cn.itcast.order.feign.ProductFeignClient: DEBUG